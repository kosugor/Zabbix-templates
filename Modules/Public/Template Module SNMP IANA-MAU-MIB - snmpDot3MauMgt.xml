<?xml version="1.0" encoding="UTF-8"?>
<zabbix_export>
  <date>2023-03-15T15:35:39Z</date>
  <groups>
    <group>
      <name>Templates/Modules/Public</name>
    </group>
  </groups>
  <templates>
    <template>
      <name>Template Module SNMP IANA-MAU-MIB - snmpDot3MauMgt</name>
      <applications>
        <application>
          <name>MAU-MIB::dot3RpMauBasicGroup</name>
        </application>
        <application>
          <name>MAU-MIB::dot3IfMauBasicGroup</name>
        </application>
        <application>
          <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
        </application>
        <application>
          <name>MAU-MIB::dot3BroadMauBasicGroup</name>
        </application>
        <application>
          <name>MAU-MIB::snmpDot3MauTraps</name>
        </application>
      </applications>
      <description>Generated by mib2zabbix</description>
      <discovery_rules>
        <discovery_rule>
          <name>ifMauAutoNegEntry Discovery</name>
          <allowed_hosts></allowed_hosts>
          <authtype>0</authtype>
          <delay>1d</delay>
          <delay_flex></delay_flex>
          <description>An entry in the table, containing configuration and status information for the auto-negotiation function of a particular MAU.</description>
          <filter>
            <conditions></conditions>
            <evaltype>0</evaltype>
            <formula></formula>
          </filter>
          <graph_prototypes>
          </graph_prototypes>
          <host_prototypes>
          </host_prototypes>
          <ipmi_sensor></ipmi_sensor>
          <item_prototypes>
            <item_prototype>
              <name>ifMauAutoNegRemoteFaultReceived for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value that identifies any fault indications received from the far end of a link by the local auto-negotiation entity for 1000Mbps MAUs.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegRemoteFaultReceived[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.13.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegRemoteFaultReceived</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegRemoteFaultAdvertised for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value that identifies any local fault indications that this MAU has detected and will advertise at the next auto-negotiation interaction for 1000Mbps MAUs.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegRemoteFaultAdvertised[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.12.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegRemoteFaultAdvertised</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegCapReceivedBits for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value that uniquely identifies the set of capabilities received from the remote auto-negotiation entity. Note that interfaces that support this MIB may be attached to remote auto-negotiation entities that have capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegCapReceivedBits[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.11.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegCapReceivedBits</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegCapAdvertisedBits for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value that uniquely identifies the set of capabilities advertised by the local auto-negotiation entity. Capabilities in this object that are not available in ifMauAutoNegCapabilityBits cannot be enabled. Note that the local auto-negotiation entity may advertise some capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegCapAdvertisedBits[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.10.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegCapAdvertisedBits</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegCapabilityBits for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value that uniquely identifies the set of capabilities of the local auto-negotiation entity. Note that interfaces that support this MIB may have capabilities that extend beyond the scope of this MIB. Note that the local auto-negotiation entity may support some capabilities beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauAutoNegCapBits TC.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegCapabilityBits[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.9.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegCapabilityBits</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegRestart for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>If the value of this object is set to restart(1) then this will force auto-negotiation to begin link renegotiation. If auto-negotiation signaling is disabled, a write to this object has no effect. Setting the value of this object to norestart(2) has no effect.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegRestart[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.8.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegRestart</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegCapReceived for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauAutoNegCapReceivedBits. A value that uniquely identifies the set of capabilities received from the remote auto-negotiation entity. Refer to ifMauAutoNegCapability for a description of the possible values of this object. Note that interfaces that support this MIB may be attached to remote auto-negotiation entities that have capabilities beyond the scope of this MIB.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegCapReceived[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.7.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegCapAdvertised for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauAutoNegCapAdvertisedBits. A value that uniquely identifies the set of capabilities advertised by the local auto-negotiation entity. Refer to ifMauAutoNegCapability for a description of the possible values of this object. Capabilities in this object that are not available in ifMauAutoNegCapability cannot be enabled.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegCapAdvertised[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.6.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegCapability for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauAutoNegCapabilityBits. A value that uniquely identifies the set of capabilities of the local auto-negotiation entity. The value is a sum that initially takes the value zero. Then, for each capability of this interface, 2 raised to the power noted below is added to the sum. For example, an interface that has the capability to support only 100Base-TX half duplex would have a value of 32768 (2**15). In contrast, an interface that supports both 100Base-TX half duplex and 100Base-TX full duplex would have a value of 98304 ((2**15) + (2**16)). The powers of 2 assigned to the capabilities are these: Power Capability 0 other or unknown (1-9) (reserved) 10 10BASE-T half duplex mode 11 10BASE-T full duplex mode 12 (reserved) 13 (reserved) 14 100BASE-T4 15 100BASE-TX half duplex mode 16 100BASE-TX full duplex mode 17 (reserved) 18 (reserved) 19 100BASE-T2 half duplex mode 20 100BASE-T2 full duplex mode Note that interfaces that support this MIB may have capabilities that extend beyond the scope of this MIB.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegCapability[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.5.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegConfig for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value indicating the current status of the auto-negotiation process. The enumeration parallelDetectFail(5) maps to a failure in parallel detection as defined in 28.2.3.1 of [IEEE802.3].</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegConfig[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.4.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegConfig</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegRemoteSignaling for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value indicating whether the remote end of the link is using auto-negotiation signaling. It takes the value detected(1) if and only if, during the previous link negotiation, FLP Bursts were received.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegRemoteSignaling[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.2.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegRemoteSignaling</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegAdminStatus for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauAutoNegGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>Setting this object to enabled(1) will cause the interface that has the auto-negotiation signaling ability to be enabled. If the value of this object is disabled(2) then the interface will act as it would if it had no auto-negotiation signaling. Under these conditions, an IEEE 802.3 MAU will immediately be forced to the state indicated by the value of the object ifMauDefaultType. NOTE TO IMPLEMENTORS: When ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by the ifMauDefaultType object, rather than continuing to operate at the value earlier determined by the auto-negotiation function.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegAdminStatus[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.5.1.1.1.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegAdminStatus</name>
              </valuemap>
            </item_prototype>
          </item_prototypes>
          <key>MAU-MIB.ifMauAutoNegEntry</key>
          <lifetime>30</lifetime>
          <params></params>
          <password></password>
          <port>{$SNMP_PORT}</port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
          <snmp_oid>discovery[{#IFMAUAUTONEGREMOTEFAULTRECEIVED},.1.3.6.1.2.1.26.5.1.1.13,{#IFMAUAUTONEGREMOTEFAULTADVERTISED},.1.3.6.1.2.1.26.5.1.1.12,{#IFMAUAUTONEGCAPRECEIVEDBITS},.1.3.6.1.2.1.26.5.1.1.11,{#IFMAUAUTONEGCAPADVERTISEDBITS},.1.3.6.1.2.1.26.5.1.1.10]</snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trigger_prototypes>
          </trigger_prototypes>
          <type>4</type>
          <username></username>
        </discovery_rule>
        <discovery_rule>
          <name>broadMauBasicEntry Discovery</name>
          <allowed_hosts></allowed_hosts>
          <authtype>0</authtype>
          <delay>1d</delay>
          <delay_flex></delay_flex>
          <description>********* THIS OBJECT IS DEPRECATED ********** An entry in the table, containing information about a single broadband MAU.</description>
          <filter>
            <conditions></conditions>
            <evaltype>0</evaltype>
            <formula></formula>
          </filter>
          <graph_prototypes>
          </graph_prototypes>
          <host_prototypes>
          </host_prototypes>
          <ipmi_sensor></ipmi_sensor>
          <item_prototypes>
            <item_prototype>
              <name>broadMauTranslationFreq for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3BroadMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This variable indicates the translation offset frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>broadMauTranslationFreq[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.3.1.1.5.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>broadMauXmtCarrierFreq for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3BroadMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This variable indicates the transmit carrier frequency of the 10BROAD36 MAU in MHz/4; that is, in units of 250 kHz.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>broadMauXmtCarrierFreq[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.3.1.1.4.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>broadMauXmtRcvSplitType for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3BroadMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This object indicates the type of frequency multiplexing/cabling system used to separate the transmit and receive paths for the 10BROAD36 MAU. The value other(1) is returned if the split type is not either single or dual. The value single(2) indicates a single cable system. The value dual(3) indicates a dual cable system, offset normally zero.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>broadMauXmtRcvSplitType[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.3.1.1.3.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::broadMauXmtRcvSplitType</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>broadMauIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3BroadMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This variable uniquely identifies the MAU connected to interface broadMauIfIndex that is described by this entry.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>broadMauIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.3.1.1.2.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>broadMauIfIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3BroadMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This variable uniquely identifies the interface to which the MAU described by this entry is connected.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>broadMauIfIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.3.1.1.1.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
          </item_prototypes>
          <key>MAU-MIB.broadMauBasicEntry</key>
          <lifetime>30</lifetime>
          <params></params>
          <password></password>
          <port>{$SNMP_PORT}</port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
          <snmp_oid>discovery[{#BROADMAUTRANSLATIONFREQ},.1.3.6.1.2.1.26.3.1.1.5,{#BROADMAUXMTCARRIERFREQ},.1.3.6.1.2.1.26.3.1.1.4,{#BROADMAUXMTRCVSPLITTYPE},.1.3.6.1.2.1.26.3.1.1.3,{#BROADMAUINDEX},.1.3.6.1.2.1.26.3.1.1.2,{#BROADMAUIFINDEX},.1.3.6.1.2.1.26.3.1.1.1]</snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trigger_prototypes>
          </trigger_prototypes>
          <type>4</type>
          <username></username>
        </discovery_rule>
        <discovery_rule>
          <name>ifJackEntry Discovery</name>
          <allowed_hosts></allowed_hosts>
          <authtype>0</authtype>
          <delay>1d</delay>
          <delay_flex></delay_flex>
          <description>An entry in the table, containing information about a particular jack.</description>
          <filter>
            <conditions></conditions>
            <evaltype>0</evaltype>
            <formula></formula>
          </filter>
          <graph_prototypes>
          </graph_prototypes>
          <host_prototypes>
          </host_prototypes>
          <ipmi_sensor></ipmi_sensor>
          <item_prototypes>
            <item_prototype>
              <name>ifJackType for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>The jack connector type, as it appears on the outside of the system.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifJackType[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.2.1.2.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifJackType</name>
              </valuemap>
            </item_prototype>
          </item_prototypes>
          <key>MAU-MIB.ifJackEntry</key>
          <lifetime>30</lifetime>
          <params></params>
          <password></password>
          <port>{$SNMP_PORT}</port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
          <snmp_oid>discovery[{#IFJACKTYPE},.1.3.6.1.2.1.26.2.2.1.2]</snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trigger_prototypes>
          </trigger_prototypes>
          <type>4</type>
          <username></username>
        </discovery_rule>
        <discovery_rule>
          <name>ifMauEntry Discovery</name>
          <allowed_hosts></allowed_hosts>
          <authtype>0</authtype>
          <delay>1d</delay>
          <delay_flex></delay_flex>
          <description>An entry in the table, containing information about a single MAU.</description>
          <filter>
            <conditions></conditions>
            <evaltype>0</evaltype>
            <formula></formula>
          </filter>
          <graph_prototypes>
          </graph_prototypes>
          <host_prototypes>
          </host_prototypes>
          <ipmi_sensor></ipmi_sensor>
          <item_prototypes>
            <item_prototype>
              <name>ifMauHCFalseCarriers for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of false carrier events during IDLE in 100BASE-X and 1000BASE-X links. For all other MAU types, this counter will always indicate zero. This counter does not increment at the symbol rate. This counter is a 64-bit version of ifMauFalseCarriers. Since the 32-bit version of this counter can roll over very quickly, management stations are advised to poll the 64-bit version instead, in order to avoid loss of information. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauHCFalseCarriers[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.14.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauTypeListBits for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be. If auto-negotiation is present on this MAU, this object will map to ifMauAutoNegCapabilityBits. Note that this MAU may be capable of operating as a MAU type that is beyond the scope of this MIB. This is indicated by returning the bit value bOther in addition to any bit values for standard capabilities that are listed in the IANAifMauTypeListBits TC.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauTypeListBits[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.13.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauTypeListBits</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauAutoNegSupported for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This object indicates whether or not auto-negotiation is supported on this MAU.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauAutoNegSupported[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.12.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauAutoNegSupported</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauDefaultType for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This object identifies the default administrative baseband MAU type to be used in conjunction with the operational MAU type denoted by ifMauType. The set of possible values for this object is the same as the set defined for the ifMauType object. This object represents the administratively-configured type of the MAU. If auto-negotiation is not enabled or is not implemented for this MAU, the value of this object determines the operational type of the MAU. In this case, a set to this object will force the MAU into the specified operating mode. If auto-negotiation is implemented and enabled for this MAU, the operational type of the MAU is determined by auto-negotiation, and the value of this object denotes the type to which the MAU will automatically revert if/when auto-negotiation is later disabled. NOTE TO IMPLEMENTORS: It may be necessary to provide for underlying hardware implementations which do not follow the exact behavior specified above. In particular, when ifMauAutoNegAdminStatus transitions from enabled to disabled, the agent implementation MUST ensure that the operational type of the MAU (as reported by ifMauType) correctly transitions to the value specified by this object, rather than continuing to operate at the value earlier determined by the auto-negotiation function.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauDefaultType[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.11.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauTypeList for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>********* THIS OBJECT IS DEPRECATED ********** This object has been deprecated in favour of ifMauTypeListBits. A value that uniquely identifies the set of possible IEEE 802.3 types that the MAU could be. The value is a sum that initially takes the value zero. Then, for each type capability of this MAU, 2 raised to the power noted below is added to the sum. For example, a MAU that has the capability to be only 10BASE-T would have a value of 512 (2**9). In contrast, a MAU that supports both 10Base-T (full duplex) and 100BASE-TX (full duplex) would have a value of ((2**11) + (2**16)), or 67584. The powers of 2 assigned to the capabilities are these: Power Capability 0 other or unknown 1 AUI 2 10BASE-5 3 FOIRL 4 10BASE-2 5 10BASE-T duplex mode unknown 6 10BASE-FP 7 10BASE-FB 8 10BASE-FL duplex mode unknown 9 10BROAD36 10 10BASE-T half duplex mode 11 10BASE-T full duplex mode 12 10BASE-FL half duplex mode 13 10BASE-FL full duplex mode 14 100BASE-T4 15 100BASE-TX half duplex mode 16 100BASE-TX full duplex mode 17 100BASE-FX half duplex mode 18 100BASE-FX full duplex mode 19 100BASE-T2 half duplex mode 20 100BASE-T2 full duplex mode If auto-negotiation is present on this MAU, this object will map to ifMauAutoNegCapability.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauTypeList[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.10.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauFalseCarriers for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of false carrier events during IDLE in 100BASE-X and 1000BASE-X links. For all other MAU types, this counter will always indicate zero. This counter does not increment at the symbol rate. It can increment after a valid carrier completion at a maximum rate of once per 100 ms for 100BASE-X and once per 10us for 1000BASE-X until the next CarrierEvent. This counter can roll over very quickly. A management station is advised to poll the ifMauHCFalseCarriers instead of this counter in order to avoid loss of information. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauFalseCarriers[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.9.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauJabberingStateEnters for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4). This counter will always indicate zero for MAUs of type dot3MauTypeAUI and those of speeds above 10Mbps. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauJabberingStateEnters[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.8.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauJabberState for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>The value other(1) is returned if the jabber state is not 2, 3, or 4. The agent MUST always return other(1) for MAU type dot3MauTypeAUI. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. If the MAU is not jabbering the agent returns noJabber(3). This is the 'normal' state. If the MAU is in jabber state the agent returns the jabbering(4) value.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauJabberState[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.7.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauJabberState</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauMediaAvailableStateExits for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of times that ifMauMediaAvailable for this MAU instance leaves the state available(3). Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of ifCounterDiscontinuityTime.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauMediaAvailableStateExits[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.6.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauMediaAvailable for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This object identifies Media Available state of the MAU, complementary to the ifMauStatus. Values for the standard IEEE 802.3 Media Available states are defined in the IANA maintained IANA-MAU-MIB module, as IANAifMauMediaAvailable TC.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauMediaAvailable[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.5.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauMediaAvailable</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauStatus for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>The current state of the MAU. This object MAY be implemented as a read-only object by those agents and MAUs that do not implement software control of the MAU state. Some agents may not support setting the value of this object to some of the enumerated values. The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. A MAU in the operational(3) state is fully functional; it operates, and passes signals to its attached DTE or repeater port in accordance to its specification. A MAU in standby(4) state forces DI and CI to idle and the media transmitter to idle or fault, if supported. Standby(4) mode only applies to link type MAUs. The state of ifMauMediaAvailable is unaffected. A MAU in shutdown(5) state assumes the same condition on DI, CI, and the media transmitter, as though it were powered down or not connected. The MAU MAY return other(1) value for the ifMauJabberState and ifMauMediaAvailable objects when it is in this state. For an AUI, this state will remove power from the AUI. Setting this variable to the value reset(6) resets the MAU in the same manner as a power-off, power-on cycle of at least one-half second would. The agent is not required to return the value reset(6). Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state, except that setting a mixing-type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauStatus[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.4.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::ifMauStatus</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauType for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This object identifies the MAU type. Values for standard IEEE 802.3 MAU types are defined in the IANA maintained IANA-MAU-MIB module, as OBJECT-IDENTITIES of dot3MauType. If the MAU type is unknown, the object identifier zeroDotZero is returned. This object represents the operational type of the MAU, as determined by either 1) the result of the auto-negotiation function or 2) if auto-negotiation is not enabled or is not implemented for this MAU, by the value of the object ifMauDefaultType. In case 2), a set to the object ifMauDefaultType will force the MAU into the new operating mode.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauType[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.3.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same interface (ifMauIfIndex).</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.2.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>ifMauIfIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3IfMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This variable uniquely identifies the interface to which the MAU described by this entry is connected.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>ifMauIfIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.2.1.1.1.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
          </item_prototypes>
          <key>MAU-MIB.ifMauEntry</key>
          <lifetime>30</lifetime>
          <params></params>
          <password></password>
          <port>{$SNMP_PORT}</port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
          <snmp_oid>discovery[{#IFMAUHCFALSECARRIERS},.1.3.6.1.2.1.26.2.1.1.14,{#IFMAUTYPELISTBITS},.1.3.6.1.2.1.26.2.1.1.13,{#IFMAUAUTONEGSUPPORTED},.1.3.6.1.2.1.26.2.1.1.12,{#IFMAUDEFAULTTYPE},.1.3.6.1.2.1.26.2.1.1.11,{#IFMAUTYPELIST},.1.3.6.1.2.1.26.2.1.1.10]</snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trigger_prototypes>
          </trigger_prototypes>
          <type>4</type>
          <username></username>
        </discovery_rule>
        <discovery_rule>
          <name>rpJackEntry Discovery</name>
          <allowed_hosts></allowed_hosts>
          <authtype>0</authtype>
          <delay>1d</delay>
          <delay_flex></delay_flex>
          <description>An entry in the table, containing information about a particular jack.</description>
          <filter>
            <conditions></conditions>
            <evaltype>0</evaltype>
            <formula></formula>
          </filter>
          <graph_prototypes>
          </graph_prototypes>
          <host_prototypes>
          </host_prototypes>
          <ipmi_sensor></ipmi_sensor>
          <item_prototypes>
            <item_prototype>
              <name>rpJackType for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>The jack connector type, as it appears on the outside of the system.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpJackType[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.2.1.2.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::rpJackType</name>
              </valuemap>
            </item_prototype>
          </item_prototypes>
          <key>MAU-MIB.rpJackEntry</key>
          <lifetime>30</lifetime>
          <params></params>
          <password></password>
          <port>{$SNMP_PORT}</port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
          <snmp_oid>discovery[{#RPJACKTYPE},.1.3.6.1.2.1.26.1.2.1.2]</snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trigger_prototypes>
          </trigger_prototypes>
          <type>4</type>
          <username></username>
        </discovery_rule>
        <discovery_rule>
          <name>rpMauEntry Discovery</name>
          <allowed_hosts></allowed_hosts>
          <authtype>0</authtype>
          <delay>1d</delay>
          <delay_flex></delay_flex>
          <description>An entry in the table, containing information about a single MAU.</description>
          <filter>
            <conditions></conditions>
            <evaltype>0</evaltype>
            <formula></formula>
          </filter>
          <graph_prototypes>
          </graph_prototypes>
          <host_prototypes>
          </host_prototypes>
          <ipmi_sensor></ipmi_sensor>
          <item_prototypes>
            <item_prototype>
              <name>rpMauFalseCarriers for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of false carrier events during IDLE in 100BASE-X links. This counter does not increment at the symbol rate. It can increment after a valid carrier completion at a maximum rate of once per 100 ms until the next carrier event. This counter increments only for MAUs of type dot3MauType100BaseT4, dot3MauType100BaseTX, dot3MauType100BaseFX, and all 1000Mbps types. For all other MAU types, this counter will always indicate zero. The approximate minimum time for rollover of this counter is 7.4 hours. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauFalseCarriers[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.10.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauJabberingStateEnters for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of times that mauJabberState for this MAU instance enters the state jabbering(4). For MAUs of type dot3MauTypeAUI, dot3MauType100BaseT4, dot3MauType100BaseTX, dot3MauType100BaseFX, and all 1000Mbps types, this counter will always indicate zero. Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauJabberingStateEnters[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.9.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauJabberState for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>The value other(1) is returned if the jabber state is not 2, 3, or 4. The agent MUST always return other(1) for MAU type dot3MauTypeAUI. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. If the MAU is not jabbering the agent returns noJabber(3). This is the 'normal' state. If the MAU is in jabber state the agent returns the jabbering(4) value.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauJabberState[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.8.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::rpMauJabberState</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauMediaAvailableStateExits for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>1</delta>
              <description>A count of the number of times that rpMauMediaAvailable for this MAU instance leaves the state available(3). Discontinuities in the value of this counter can occur at re-initialization of the management system and at other times, as indicated by the value of rptrMonitorPortLastChange.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauMediaAvailableStateExits[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.7.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units>/sec</units>
              <username></username>
              <value_type>3</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauMediaAvailable for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This object identifies Media Available state of the MAU, complementary to the rpMauStatus. Values for the standard IEEE 802.3 Media Available states are defined in the IANA maintained IANA-MAU-MIB module, as IANAifMauMediaAvailable TC.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauMediaAvailable[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.6.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::rpMauMediaAvailable</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauStatus for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>The current state of the MAU. This object MAY be implemented as a read-only object by those agents and MAUs that do not implement software control of the MAU state. Some agents may not support setting the value of this object to some of the enumerated values. The value other(1) is returned if the MAU is in a state other than one of the states 2 through 6. The value unknown(2) is returned when the MAU's true state is unknown; for example, when it is being initialized. A MAU in the operational(3) state is fully functional; it operates, and passes signals to its attached DTE or repeater port in accordance to its specification. A MAU in standby(4) state forces DI and CI to idle, and the media transmitter to idle or fault, if supported. Standby(4) mode only applies to link type MAUs. The state of rpMauMediaAvailable is unaffected. A MAU in shutdown(5) state assumes the same condition on DI, CI, and the media transmitter, as though it were powered down or not connected. The MAU MAY return other(1) value for the rpMauJabberState and rpMauMediaAvailable objects when it is in this state. For an AUI, this state will remove power from the AUI. Setting this variable to the value reset(6) resets the MAU in the same manner as a power-off, power-on cycle of at least one-half second would. The agent is not required to return the value reset(6). Setting this variable to the value operational(3), standby(4), or shutdown(5) causes the MAU to assume the respective state, except that setting a mixing-type MAU or an AUI to standby(4) will cause the MAU to enter the shutdown state.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauStatus[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.5.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap>
                <name>MAU-MIB::rpMauStatus</name>
              </valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauType for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This object identifies the MAU type. Values for standard IEEE 802.3 MAU types are defined in the IANA maintained IANA-MAU-MIB module, as OBJECT-IDENTITIES of dot3MauType. If the MAU type is unknown, the object identifier zeroDotZero is returned.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauType[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.4.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>4</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This variable uniquely identifies the MAU described by this entry from among other MAUs connected to the same port (rpMauPortIndex).</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.3.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauPortIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This variable uniquely identifies the repeater port within group rpMauGroupIndex to which the MAU described by this entry is connected.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauPortIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.2.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
            <item_prototype>
              <name>rpMauGroupIndex for {#SNMPINDEX}</name>
              <allowed_hosts></allowed_hosts>
              <application_prototypes></application_prototypes>
              <applications>
                <application>
                  <name>MAU-MIB::dot3RpMauBasicGroup</name>
                </application>
              </applications>
              <authtype>0</authtype>
              <data_type>0</data_type>
              <delay>1d</delay>
              <delay_flex></delay_flex>
              <delta>0</delta>
              <description>This variable uniquely identifies the group containing the port to which the MAU described by this entry is connected. Note: In practice, a group will generally be a field-replaceable unit (i.e., module, card, or board) that can fit in the physical system enclosure, and the group number will correspond to a number marked on the physical enclosure. The group denoted by a particular value of this object is the same as the group denoted by the same value of rptrGroupIndex.</description>
              <formula>1</formula>
              <history>30</history>
              <inventory_link>0</inventory_link>
              <ipmi_sensor></ipmi_sensor>
              <key>rpMauGroupIndex[{#SNMPINDEX}]</key>
              <logtimefmt></logtimefmt>
              <multiplier>0</multiplier>
              <params></params>
              <password></password>
              <port>{$SNMP_PORT}</port>
              <privatekey></privatekey>
              <publickey></publickey>
              <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
              <snmp_oid>.1.3.6.1.2.1.26.1.1.1.1.{#SNMPINDEX}</snmp_oid>
              <snmpv3_authpassphrase></snmpv3_authpassphrase>
              <snmpv3_authprotocol>0</snmpv3_authprotocol>
              <snmpv3_contextname></snmpv3_contextname>
              <snmpv3_privpassphrase></snmpv3_privpassphrase>
              <snmpv3_privprotocol>0</snmpv3_privprotocol>
              <snmpv3_securitylevel>0</snmpv3_securitylevel>
              <snmpv3_securityname></snmpv3_securityname>
              <status>0</status>
              <trends>365</trends>
              <type>4</type>
              <units></units>
              <username></username>
              <value_type>0</value_type>
              <valuemap></valuemap>
            </item_prototype>
          </item_prototypes>
          <key>MAU-MIB.rpMauEntry</key>
          <lifetime>30</lifetime>
          <params></params>
          <password></password>
          <port>{$SNMP_PORT}</port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community>{$SNMP_COMMUNITY}</snmp_community>
          <snmp_oid>discovery[{#RPMAUFALSECARRIERS},.1.3.6.1.2.1.26.1.1.1.10,{#RPMAUJABBERINGSTATEENTERS},.1.3.6.1.2.1.26.1.1.1.9,{#RPMAUJABBERSTATE},.1.3.6.1.2.1.26.1.1.1.8,{#RPMAUMEDIAAVAILABLESTATEEXITS},.1.3.6.1.2.1.26.1.1.1.7,{#RPMAUSTATUS},.1.3.6.1.2.1.26.1.1.1.5]</snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trigger_prototypes>
          </trigger_prototypes>
          <type>4</type>
          <username></username>
        </discovery_rule>
      </discovery_rules>
      <groups>
        <group>
          <name>Templates/Modules/Public</name>
        </group>
      </groups>
      <items>
        <item>
          <name>SNMP Trap: MAU-MIB::ifMauJabberTrap</name>
          <allowed_hosts></allowed_hosts>
          <applications>
            <application>
              <name>MAU-MIB::snmpDot3MauTraps</name>
            </application>
          </applications>
          <authtype>0</authtype>
          <data_type>0</data_type>
          <delay>0</delay>
          <delay_flex></delay_flex>
          <delta>0</delta>
          <description>This trap is sent whenever a managed interface MAU enters the jabber state. The agent MUST throttle the generation of consecutive ifMauJabberTraps so that there is at least a five-second gap between them.

Varbinds:
0. ifMauJabberState (INTEGER)
      The value other(1) is returned if the jabber
      state is not 2, 3, or 4. The agent MUST always
      return other(1) for MAU type dot3MauTypeAUI.
      
      The value unknown(2) is returned when the MAU's
      true state is unknown; for example, when it is
      being initialized.
      
      If the MAU is not jabbering the agent returns
      noJabber(3). This is the 'normal' state.
      
      If the MAU is in jabber state the agent returns
      
      the jabbering(4) value.

</description>
          <formula>1</formula>
          <history>30</history>
          <inventory_link>0</inventory_link>
          <ipmi_sensor></ipmi_sensor>
          <key>snmptrap[&quot;\s\.1\.3\.6\.1\.2\.1\.26\.0\.2\s&quot;]</key>
          <logtimefmt>hh:mm:ss dd/MM/yyyy</logtimefmt>
          <multiplier>0</multiplier>
          <params></params>
          <password></password>
          <port></port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community></snmp_community>
          <snmp_oid></snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trends>365</trends>
          <type>17</type>
          <units></units>
          <username></username>
          <value_type>2</value_type>
          <valuemap></valuemap>
        </item>
        <item>
          <name>SNMP Trap: MAU-MIB::rpMauJabberTrap</name>
          <allowed_hosts></allowed_hosts>
          <applications>
            <application>
              <name>MAU-MIB::snmpDot3MauTraps</name>
            </application>
          </applications>
          <authtype>0</authtype>
          <data_type>0</data_type>
          <delay>0</delay>
          <delay_flex></delay_flex>
          <delta>0</delta>
          <description>This trap is sent whenever a managed repeater MAU enters the jabber state. The agent MUST throttle the generation of consecutive rpMauJabberTraps so that there is at least a five-second gap between them.

Varbinds:
0. rpMauJabberState (INTEGER)
      The value other(1) is returned if the jabber
      state is not 2, 3, or 4. The agent MUST always
      return other(1) for MAU type dot3MauTypeAUI.
      
      The value unknown(2) is returned when the MAU's
      true state is unknown; for example, when it is
      being initialized.
      
      If the MAU is not jabbering the agent returns
      noJabber(3). This is the 'normal' state.
      
      If the MAU is in jabber state the agent returns
      the jabbering(4) value.

</description>
          <formula>1</formula>
          <history>30</history>
          <inventory_link>0</inventory_link>
          <ipmi_sensor></ipmi_sensor>
          <key>snmptrap[&quot;\s\.1\.3\.6\.1\.2\.1\.26\.0\.1\s&quot;]</key>
          <logtimefmt>hh:mm:ss dd/MM/yyyy</logtimefmt>
          <multiplier>0</multiplier>
          <params></params>
          <password></password>
          <port></port>
          <privatekey></privatekey>
          <publickey></publickey>
          <snmp_community></snmp_community>
          <snmp_oid></snmp_oid>
          <snmpv3_authpassphrase></snmpv3_authpassphrase>
          <snmpv3_authprotocol>0</snmpv3_authprotocol>
          <snmpv3_contextname></snmpv3_contextname>
          <snmpv3_privpassphrase></snmpv3_privpassphrase>
          <snmpv3_privprotocol>0</snmpv3_privprotocol>
          <snmpv3_securitylevel>0</snmpv3_securitylevel>
          <snmpv3_securityname></snmpv3_securityname>
          <status>0</status>
          <trends>365</trends>
          <type>17</type>
          <units></units>
          <username></username>
          <value_type>2</value_type>
          <valuemap></valuemap>
        </item>
      </items>
      <macros>
        <macro>
          <macro>{$MIB2ZABBIX_CMD}</macro>
          <value>mib2zabbix -o .1.3.6.1.2.1.26 --name=Template Module SNMP IANA-MAU-MIB - snmpDot3MauMgt -e --group=Templates/Modules/Public --history=30 --disc-delay=86400 --check-delay=86400</value>
        </macro>
        <macro>
          <macro>{$OID}</macro>
          <value>.1.3.6.1.2.1.26</value>
        </macro>
        <macro>
          <macro>{$OID_PATH}</macro>
          <value>iso.org.dod.internet.mgmt.mib-2.snmpDot3MauMgt</value>
        </macro>
        <macro>
          <macro>{$OID_MOD}</macro>
          <value>IANA-MAU-MIB</value>
        </macro>
        <macro>
          <macro>{$SNMP_PORT}</macro>
          <value>161</value>
        </macro>
        <macro>
          <macro>{$SNMP_COMMUNITY}</macro>
          <value>public</value>
        </macro>
      </macros>
      <template>Template Module SNMP IANA-MAU-MIB - snmpDot3MauMgt</template>
    </template>
  </templates>
  <value_maps>
    <value_map>
      <name>MAU-MIB::broadMauXmtRcvSplitType</name>
      <mappings>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>single</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>dual</newvalue>
          <value>3</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifJackType</name>
      <mappings>
        <mapping>
          <newvalue>rj45S</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>telco</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>fAUI</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>rj45</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>fiberLC</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>db9</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>fiberST</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>fiberSC</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>sfpPlusDA</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>bnc</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>cx4</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>mtrj</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>hssdc</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>mAUI</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>fiberMIC</newvalue>
          <value>9</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegAdminStatus</name>
      <mappings>
        <mapping>
          <newvalue>enabled</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>disabled</newvalue>
          <value>2</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegCapAdvertisedBits</name>
      <mappings>
        <mapping>
          <newvalue>b10GbaseT</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT4</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseCR4</newvalue>
          <value>21</value>
        </mapping>
        <mapping>
          <newvalue>bFdxPause</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>bOther</newvalue>
          <value>0</value>
        </mapping>
        <mapping>
          <newvalue>bFdxAPause</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>b10baseTFD</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2FD</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKR</newvalue>
          <value>19</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTX</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseKX</newvalue>
          <value>17</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseXFD</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseTFD</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTXFD</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseCR10</newvalue>
          <value>22</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKX4</newvalue>
          <value>18</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseT</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseX</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>bFdxBPause</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>bFdxSPause</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>b10baseT</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseKR4</newvalue>
          <value>20</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegCapReceivedBits</name>
      <mappings>
        <mapping>
          <newvalue>b100baseT4</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseCR4</newvalue>
          <value>21</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseT</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>bFdxPause</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>bFdxAPause</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>bOther</newvalue>
          <value>0</value>
        </mapping>
        <mapping>
          <newvalue>b10baseTFD</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKR</newvalue>
          <value>19</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2FD</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseKX</newvalue>
          <value>17</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTX</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseTFD</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseXFD</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTXFD</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseCR10</newvalue>
          <value>22</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKX4</newvalue>
          <value>18</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseX</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseT</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>bFdxSPause</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>bFdxBPause</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>b10baseT</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseKR4</newvalue>
          <value>20</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegCapabilityBits</name>
      <mappings>
        <mapping>
          <newvalue>b100baseT4</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseCR4</newvalue>
          <value>21</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseT</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>bFdxAPause</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>bOther</newvalue>
          <value>0</value>
        </mapping>
        <mapping>
          <newvalue>bFdxPause</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKR</newvalue>
          <value>19</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2FD</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>b10baseTFD</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseTFD</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseXFD</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseKX</newvalue>
          <value>17</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTX</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseX</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseT</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTXFD</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseCR10</newvalue>
          <value>22</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKX4</newvalue>
          <value>18</value>
        </mapping>
        <mapping>
          <newvalue>b10baseT</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>bFdxSPause</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>bFdxBPause</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseKR4</newvalue>
          <value>20</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegConfig</name>
      <mappings>
        <mapping>
          <newvalue>parallelDetectFail</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>complete</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>configuring</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>disabled</newvalue>
          <value>4</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegRemoteFaultAdvertised</name>
      <mappings>
        <mapping>
          <newvalue>noError</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>offline</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>linkFailure</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>autoNegError</newvalue>
          <value>4</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegRemoteFaultReceived</name>
      <mappings>
        <mapping>
          <newvalue>linkFailure</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>autoNegError</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>noError</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>offline</newvalue>
          <value>2</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegRemoteSignaling</name>
      <mappings>
        <mapping>
          <newvalue>detected</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>notdetected</newvalue>
          <value>2</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegRestart</name>
      <mappings>
        <mapping>
          <newvalue>restart</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>norestart</newvalue>
          <value>2</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauAutoNegSupported</name>
      <mappings>
        <mapping>
          <newvalue>true</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>false</newvalue>
          <value>2</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauJabberState</name>
      <mappings>
        <mapping>
          <newvalue>unknown</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>noJabber</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>jabbering</newvalue>
          <value>4</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauMediaAvailable</name>
      <mappings>
        <mapping>
          <newvalue>remoteJabber</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>autoNegError</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>wisSignalLoss</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>ready</newvalue>
          <value>20</value>
        </mapping>
        <mapping>
          <newvalue>dxsLinkFault</newvalue>
          <value>17</value>
        </mapping>
        <mapping>
          <newvalue>remoteFault</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>pcsLinkFault</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>unknown</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>offline</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>remoteTest</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>notAvailable</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>invalidSignal</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>pxsLinkFault</newvalue>
          <value>18</value>
        </mapping>
        <mapping>
          <newvalue>pmdLinkFault</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>remoteLinkLoss</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>availableReduced</newvalue>
          <value>19</value>
        </mapping>
        <mapping>
          <newvalue>available</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>excessiveBER</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>wisFrameLoss</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauStatus</name>
      <mappings>
        <mapping>
          <newvalue>standby</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>unknown</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>shutdown</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>reset</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>operational</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::ifMauTypeListBits</name>
      <mappings>
        <mapping>
          <newvalue>b100baseT2FD</newvalue>
          <value>20</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseCXHD</newvalue>
          <value>27</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseCX4</newvalue>
          <value>41</value>
        </mapping>
        <mapping>
          <newvalue>b10baseTFD</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTXHD</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>b10GbasePRU3</newvalue>
          <value>69</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseER4</newvalue>
          <value>78</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseSXHD</newvalue>
          <value>25</value>
        </mapping>
        <mapping>
          <newvalue>b10GbasePRU1</newvalue>
          <value>68</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseLRM</newvalue>
          <value>55</value>
        </mapping>
        <mapping>
          <newvalue>b10G1GbasePRXU1</newvalue>
          <value>62</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseLXHD</newvalue>
          <value>23</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseT</newvalue>
          <value>54</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT4</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseCR4</newvalue>
          <value>71</value>
        </mapping>
        <mapping>
          <newvalue>bAUI</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseR</newvalue>
          <value>33</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseFR</newvalue>
          <value>73</value>
        </mapping>
        <mapping>
          <newvalue>b10baseFLFD</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseER</newvalue>
          <value>34</value>
        </mapping>
        <mapping>
          <newvalue>b10baseT</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseSXFD</newvalue>
          <value>26</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseW</newvalue>
          <value>37</value>
        </mapping>
        <mapping>
          <newvalue>b10PassTS</newvalue>
          <value>43</value>
        </mapping>
        <mapping>
          <newvalue>b100baseFXFD</newvalue>
          <value>18</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseSR4</newvalue>
          <value>72</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseLR</newvalue>
          <value>35</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseKR4</newvalue>
          <value>70</value>
        </mapping>
        <mapping>
          <newvalue>b10baseTHD</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseCXFD</newvalue>
          <value>28</value>
        </mapping>
        <mapping>
          <newvalue>b10GbasePRD3</newvalue>
          <value>67</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseLW</newvalue>
          <value>39</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseXHD</newvalue>
          <value>21</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseTHD</newvalue>
          <value>29</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseSR10</newvalue>
          <value>76</value>
        </mapping>
        <mapping>
          <newvalue>b1000BaseBX10U</newvalue>
          <value>48</value>
        </mapping>
        <mapping>
          <newvalue>b1000BasePX10D</newvalue>
          <value>50</value>
        </mapping>
        <mapping>
          <newvalue>b10GbasePRD1</newvalue>
          <value>65</value>
        </mapping>
        <mapping>
          <newvalue>b10G1GbasePRXD3</newvalue>
          <value>61</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseEW</newvalue>
          <value>38</value>
        </mapping>
        <mapping>
          <newvalue>b100BaseLX10</newvalue>
          <value>46</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseLXFD</newvalue>
          <value>24</value>
        </mapping>
        <mapping>
          <newvalue>b1000BasePX20U</newvalue>
          <value>53</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKX4</newvalue>
          <value>57</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseCR10</newvalue>
          <value>75</value>
        </mapping>
        <mapping>
          <newvalue>b10G1GbasePRXD2</newvalue>
          <value>60</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseKR</newvalue>
          <value>58</value>
        </mapping>
        <mapping>
          <newvalue>bFoirl</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>b100BaseBX10D</newvalue>
          <value>44</value>
        </mapping>
        <mapping>
          <newvalue>b2BaseTL</newvalue>
          <value>42</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseXFD</newvalue>
          <value>22</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseTFD</newvalue>
          <value>30</value>
        </mapping>
        <mapping>
          <newvalue>b40GbaseLR4</newvalue>
          <value>74</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseSR</newvalue>
          <value>36</value>
        </mapping>
        <mapping>
          <newvalue>b1000baseKX</newvalue>
          <value>56</value>
        </mapping>
        <mapping>
          <newvalue>b10G1GbasePRXU2</newvalue>
          <value>63</value>
        </mapping>
        <mapping>
          <newvalue>b1000BasePX20D</newvalue>
          <value>52</value>
        </mapping>
        <mapping>
          <newvalue>b10GbasePRD2</newvalue>
          <value>66</value>
        </mapping>
        <mapping>
          <newvalue>b100BaseBX10U</newvalue>
          <value>45</value>
        </mapping>
        <mapping>
          <newvalue>b10baseFL</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseLX4</newvalue>
          <value>32</value>
        </mapping>
        <mapping>
          <newvalue>bOther</newvalue>
          <value>0</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseSW</newvalue>
          <value>40</value>
        </mapping>
        <mapping>
          <newvalue>b10G1GbasePRXU3</newvalue>
          <value>64</value>
        </mapping>
        <mapping>
          <newvalue>b1000BasePX10U</newvalue>
          <value>51</value>
        </mapping>
        <mapping>
          <newvalue>b100baseFXHD</newvalue>
          <value>17</value>
        </mapping>
        <mapping>
          <newvalue>b1000BaseBX10D</newvalue>
          <value>47</value>
        </mapping>
        <mapping>
          <newvalue>b10base5</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>b10baseFLHD</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>b10baseFP</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>b1000BaseLX10</newvalue>
          <value>49</value>
        </mapping>
        <mapping>
          <newvalue>b10broad36</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>b100GbaseLR4</newvalue>
          <value>77</value>
        </mapping>
        <mapping>
          <newvalue>b10base2</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>b10baseFB</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>b10GbaseX</newvalue>
          <value>31</value>
        </mapping>
        <mapping>
          <newvalue>b100baseT2HD</newvalue>
          <value>19</value>
        </mapping>
        <mapping>
          <newvalue>b100baseTXFD</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>b10G1GbasePRXD1</newvalue>
          <value>59</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::rpJackType</name>
      <mappings>
        <mapping>
          <newvalue>cx4</newvalue>
          <value>15</value>
        </mapping>
        <mapping>
          <newvalue>bnc</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>fiberMIC</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>mAUI</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>hssdc</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>mtrj</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>db9</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>fiberLC</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>rj45</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>fAUI</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>telco</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>rj45S</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>sfpPlusDA</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>fiberST</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>fiberSC</newvalue>
          <value>8</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::rpMauJabberState</name>
      <mappings>
        <mapping>
          <newvalue>noJabber</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>jabbering</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>unknown</newvalue>
          <value>2</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::rpMauMediaAvailable</name>
      <mappings>
        <mapping>
          <newvalue>available</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>availableReduced</newvalue>
          <value>19</value>
        </mapping>
        <mapping>
          <newvalue>excessiveBER</newvalue>
          <value>16</value>
        </mapping>
        <mapping>
          <newvalue>remoteLinkLoss</newvalue>
          <value>8</value>
        </mapping>
        <mapping>
          <newvalue>pmdLinkFault</newvalue>
          <value>12</value>
        </mapping>
        <mapping>
          <newvalue>invalidSignal</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>pxsLinkFault</newvalue>
          <value>18</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
        <mapping>
          <newvalue>wisFrameLoss</newvalue>
          <value>13</value>
        </mapping>
        <mapping>
          <newvalue>remoteFault</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>dxsLinkFault</newvalue>
          <value>17</value>
        </mapping>
        <mapping>
          <newvalue>ready</newvalue>
          <value>20</value>
        </mapping>
        <mapping>
          <newvalue>remoteJabber</newvalue>
          <value>7</value>
        </mapping>
        <mapping>
          <newvalue>autoNegError</newvalue>
          <value>11</value>
        </mapping>
        <mapping>
          <newvalue>wisSignalLoss</newvalue>
          <value>14</value>
        </mapping>
        <mapping>
          <newvalue>remoteTest</newvalue>
          <value>9</value>
        </mapping>
        <mapping>
          <newvalue>notAvailable</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>offline</newvalue>
          <value>10</value>
        </mapping>
        <mapping>
          <newvalue>unknown</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>pcsLinkFault</newvalue>
          <value>15</value>
        </mapping>
      </mappings>
    </value_map>
    <value_map>
      <name>MAU-MIB::rpMauStatus</name>
      <mappings>
        <mapping>
          <newvalue>standby</newvalue>
          <value>4</value>
        </mapping>
        <mapping>
          <newvalue>unknown</newvalue>
          <value>2</value>
        </mapping>
        <mapping>
          <newvalue>shutdown</newvalue>
          <value>5</value>
        </mapping>
        <mapping>
          <newvalue>reset</newvalue>
          <value>6</value>
        </mapping>
        <mapping>
          <newvalue>operational</newvalue>
          <value>3</value>
        </mapping>
        <mapping>
          <newvalue>other</newvalue>
          <value>1</value>
        </mapping>
      </mappings>
    </value_map>
  </value_maps>
  <version>3.0</version>
</zabbix_export>
