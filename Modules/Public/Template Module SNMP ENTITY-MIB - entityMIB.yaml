zabbix_export:
  version: '6.0'
  date: '2023-03-15T18:04:53Z'
  groups:
    -
      uuid: f38f26797f4b4a6e97dfda6d429726fd
      name: Templates/Modules/Public
  templates:
    -
      uuid: 1f8b8cff4204441eaac61b6303a7653d
      template: 'Template Module SNMP ENTITY-MIB - entityMIB'
      name: 'Template Module SNMP ENTITY-MIB - entityMIB'
      description: 'Generated by mib2zabbix'
      groups:
        -
          name: Templates/Modules/Public
      items:
        -
          uuid: 5d2ee04641ad4845b104ea234b7bdd98
          name: entLastChangeTime
          type: SNMP_AGENT
          snmp_oid: .1.3.6.1.2.1.47.1.4.1.0
          key: ENTITY-MIB.entLastChangeTime
          delay: 1d
          history: 30d
          units: uptime
          description: 'The value of sysUpTime at the time a conceptual row is created, modified, or deleted in any of these tables: - entPhysicalTable - entLogicalTable - entLPMappingTable - entAliasMappingTable - entPhysicalContainsTable'
          preprocessing:
            -
              type: MULTIPLIER
              parameters:
                - '.01'
          tags:
            -
              tag: Application
              value: 'ENTITY-MIB::entityGeneral'
        -
          uuid: 8031882655624baca01d076bcf0f8bab
          name: 'SNMP Trap: ENTITY-MIB::entConfigChange'
          type: SNMP_TRAP
          key: 'snmptrap["\s\.1\.3\.6\.1\.2\.1\.47\.2\.0\.1\s"]'
          delay: '0'
          history: 30d
          trends: '0'
          value_type: LOG
          description: 'An entConfigChange notification is generated when the value of entLastChangeTime changes. It can be utilized by an NMS to trigger logical/physical entity table maintenance polls. An agent should not generate more than one entConfigChange ''notification-event'' in a given time interval (five seconds is the suggested default). A ''notification-event'' is the transmission of a single trap or inform PDU to a list of notification destinations. If additional configuration changes occur within the throttling period, then notification-events for these changes should be suppressed by the agent until the current throttling period expires. At the end of a throttling period, one notification-event should be generated if any configuration changes occurred since the start of the throttling period. In such a case, another throttling period is started right away. An NMS should periodically check the value of entLastChangeTime to detect any missed entConfigChange notification-events, e.g., due to throttling or transmission loss.'
          logtimefmt: 'hh:mm:ss dd/MM/yyyy'
          tags:
            -
              tag: Application
              value: 'ENTITY-MIB::entityMIBTrapPrefix'
      discovery_rules:
        -
          uuid: acc47e846c32410592deac23fc1b6c0d
          name: 'entAliasMappingEntry Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENTALIASMAPPINGIDENTIFIER},.1.3.6.1.2.1.47.1.3.2.1.2]'
          key: ENTITY-MIB.entAliasMappingEntry
          delay: 1d
          description: 'Information about a particular physical equipment, logical entity to external identifier binding. Each logical entity/physical component pair may be associated with one alias mapping. The logical entity index may also be used as a ''wildcard'' (refer to the entAliasLogicalIndexOrZero object DESCRIPTION clause for details.) Note that only entPhysicalIndex values that represent physical ports (i.e., associated entPhysicalClass value is ''port(10)'') are permitted to exist in this table.'
          item_prototypes:
            -
              uuid: 1fc303be105c46d18f3886d6d0519eb3
              name: 'entAliasMappingIdentifier for {#SNMPINDEX}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.3.2.1.2.{#SNMPINDEX}'
              key: 'entAliasMappingIdentifier[{#SNMPINDEX}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The value of this object identifies a particular conceptual row associated with the indicated entPhysicalIndex and entLogicalIndex pair. Because only physical ports are modeled in this table, only entries that represent interfaces or ports are allowed. If an ifEntry exists on behalf of a particular physical port, then this object should identify the associated ''ifEntry''. For repeater ports, the appropriate row in the ''rptrPortGroupTable'' should be identified instead. For example, suppose a physical port was represented by entPhysicalEntry.3, entLogicalEntry.15 existed for a repeater, and entLogicalEntry.22 existed for a bridge. Then there might be two related instances of entAliasMappingIdentifier: entAliasMappingIdentifier.3.15 == rptrPortGroupIndex.5.2 entAliasMappingIdentifier.3.22 == ifIndex.17 It is possible that other mappings (besides interfaces and repeater ports) may be defined in the future, as required. Bridge ports are identified by examining the Bridge MIB and appropriate ifEntries associated with each ''dot1dBasePort'', and are thus not represented in this table.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityMapping'
        -
          uuid: e848c0fd250643d4b42f31cbed1a817f
          name: 'entLogicalEntry Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SNMPVALUE},.1.3.6.1.2.1.47.1.2.1.1.2,{#ENTLOGICALCONTEXTNAME},.1.3.6.1.2.1.47.1.2.1.1.8,{#ENTLOGICALCONTEXTENGINEID},.1.3.6.1.2.1.47.1.2.1.1.7,{#ENTLOGICALTDOMAIN},.1.3.6.1.2.1.47.1.2.1.1.6,{#ENTLOGICALTADDRESS},.1.3.6.1.2.1.47.1.2.1.1.5]'
          key: ENTITY-MIB.entLogicalEntry
          delay: 1d
          description: 'Information about a particular logical entity. Entities may be managed by this agent or other SNMP agents (possibly) in the same chassis.'
          item_prototypes:
            -
              uuid: 973a0e9f1f4b48adb0516c9b416af5b8
              name: 'entLogicalCommunity for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.4.{#SNMPINDEX}'
              key: 'entLogicalCommunity[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'An SNMPv1 or SNMPv2C community-string, which can be used to access detailed management information for this logical entity. The agent should allow read access with this community string (to an appropriate subset of all managed objects) and may also return a community string based on the privileges of the request used to read this object. Note that an agent may return a community string with read-only privileges, even if this object is accessed with a read-write community string. However, the agent must take care not to return a community string that allows more privileges than the community string used to access this object. A compliant SNMP agent may wish to conserve naming scopes by representing multiple logical entities in a single ''default'' naming scope. This is possible when the logical entities, represented by the same value of entLogicalCommunity, have no object instances in common. For example, ''bridge1'' and ''repeater1'' may be part of the main naming scope, but at least one additional community string is needed to represent ''bridge2'' and ''repeater2''. Logical entities ''bridge1'' and ''repeater1'' would be represented by sysOREntries associated with the ''default'' naming scope. For agents not accessible via SNMPv1 or SNMPv2C, the value of this object is the empty string. This object may also contain an empty string if a community string has not yet been assigned by the agent, or if no community string with suitable access rights can be returned for a particular SNMP request. Note that this object is deprecated. Agents which implement SNMPv3 access should use the entLogicalContextEngineID and entLogicalContextName objects to identify the context associated with each logical entity. SNMPv3 agents may return a zero-length string for this object, or may continue to return a community string (e.g., tri-lingual agent support).'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
            -
              uuid: 0eafbd6c673f43afb5c868f53e303e34
              name: 'entLogicalContextEngineID for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.7.{#SNMPINDEX}'
              key: 'entLogicalContextEngineID[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The authoritative contextEngineID that can be used to send an SNMP message concerning information held by this logical entity, to the address specified by the associated ''entLogicalTAddress/entLogicalTDomain'' pair. This object, together with the associated entLogicalContextName object, defines the context associated with a particular logical entity, and allows access to SNMP engines identified by a contextEngineId and contextName pair. If no value has been configured by the agent, a zero-length string is returned, or the agent may choose not to instantiate this object at all.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
            -
              uuid: 1658e100b7ea4a8ca2328c45ecfbdd60
              name: 'entLogicalContextName for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.8.{#SNMPINDEX}'
              key: 'entLogicalContextName[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The contextName that can be used to send an SNMP message concerning information held by this logical entity, to the address specified by the associated ''entLogicalTAddress/entLogicalTDomain'' pair. This object, together with the associated entLogicalContextEngineID object, defines the context associated with a particular logical entity, and allows access to SNMP engines identified by a contextEngineId and contextName pair. If no value has been configured by the agent, a zero-length string is returned, or the agent may choose not to instantiate this object at all.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
            -
              uuid: 85e1c8ab72e741f785f5501a2b06d161
              name: 'entLogicalDescr for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.2.{#SNMPINDEX}'
              key: 'entLogicalDescr[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'A textual description of the logical entity. This object should contain a string that identifies the manufacturer''s name for the logical entity, and should be set to a distinct value for each version of the logical entity.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
            -
              uuid: e83914b11f84435b92088e04b52761b5
              name: 'entLogicalTAddress for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.5.{#SNMPINDEX}'
              key: 'entLogicalTAddress[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The transport service address by which the logical entity receives network management traffic, formatted according to the corresponding value of entLogicalTDomain. For snmpUDPDomain, a TAddress is 6 octets long: the initial 4 octets contain the IP-address in network-byte order and the last 2 contain the UDP port in network-byte order. Consult ''Transport Mappings for the Simple Network Management Protocol'' (STD 62, RFC 3417 [RFC3417]) for further information on snmpUDPDomain.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
            -
              uuid: 4f8cadeffe84485583141a8e26932116
              name: 'entLogicalTDomain for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.6.{#SNMPINDEX}'
              key: 'entLogicalTDomain[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'Indicates the kind of transport service by which the logical entity receives network management traffic. Possible values for this object are presently found in the Transport Mappings for Simple Network Management Protocol'' (STD 62, RFC 3417 [RFC3417]).'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
            -
              uuid: e2af7a8ec5754c41a7598e6bc1572445
              name: 'entLogicalType for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.2.1.1.3.{#SNMPINDEX}'
              key: 'entLogicalType[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'An indication of the type of logical entity. This will typically be the OBJECT IDENTIFIER name of the node in the SMI''s naming hierarchy which represents the major MIB module, or the majority of the MIB modules, supported by the logical entity. For example: a logical entity of a regular host/router -> mib-2 a logical entity of a 802.1d bridge -> dot1dBridge a logical entity of a 802.3 repeater -> snmpDot3RptrMgmt If an appropriate node in the SMI''s naming hierarchy cannot be identified, the value ''mib-2'' should be used.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityLogical'
        -
          uuid: 55558b6498fe48419a7c35c07c769751
          name: 'entLPMappingEntry Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENTLPPHYSICALINDEX},.1.3.6.1.2.1.47.1.3.1.1.1]'
          key: ENTITY-MIB.entLPMappingEntry
          delay: 1d
          description: 'Information about a particular logical entity to physical equipment association. Note that the nature of the association is not specifically identified in this entry. It is expected that sufficient information exists in the MIBs used to manage a particular logical entity to infer how physical component information is utilized.'
          item_prototypes:
            -
              uuid: 37e15477a0d943f6898d591321bf8bb4
              name: 'entLPPhysicalIndex for {#SNMPINDEX}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.3.1.1.1.{#SNMPINDEX}'
              key: 'entLPPhysicalIndex[{#SNMPINDEX}]'
              delay: 1d
              history: 30d
              value_type: FLOAT
              description: 'The value of this object identifies the index value of a particular entPhysicalEntry associated with the indicated entLogicalEntity.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityMapping'
        -
          uuid: 6ce7c5861ab648e586794240d171ac06
          name: 'entPhysicalContainsEntry Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#ENTPHYSICALCHILDINDEX},.1.3.6.1.2.1.47.1.3.3.1.1]'
          key: ENTITY-MIB.entPhysicalContainsEntry
          delay: 1d
          description: 'A single container/''containee'' relationship.'
          item_prototypes:
            -
              uuid: f22802d00c544d83bab15d9c570daa7a
              name: 'entPhysicalChildIndex for {#SNMPINDEX}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.3.3.1.1.{#SNMPINDEX}'
              key: 'entPhysicalChildIndex[{#SNMPINDEX}]'
              delay: 1d
              history: 30d
              value_type: FLOAT
              description: 'The value of entPhysicalIndex for the contained physical entity.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityMapping'
        -
          uuid: 7c8028293f6e47b89cbd08323d866547
          name: 'entPhysicalEntry Discovery'
          type: SNMP_AGENT
          snmp_oid: 'discovery[{#SNMPVALUE},.1.3.6.1.2.1.47.1.1.1.1.2,{#ENTPHYSICALURIS},.1.3.6.1.2.1.47.1.1.1.1.18,{#ENTPHYSICALMFGDATE},.1.3.6.1.2.1.47.1.1.1.1.17,{#ENTPHYSICALISFRU},.1.3.6.1.2.1.47.1.1.1.1.16,{#ENTPHYSICALASSETID},.1.3.6.1.2.1.47.1.1.1.1.15]'
          key: ENTITY-MIB.entPhysicalEntry
          delay: 1d
          description: 'Information about a particular physical entity. Each entry provides objects (entPhysicalDescr, entPhysicalVendorType, and entPhysicalClass) to help an NMS identify and characterize the entry, and objects (entPhysicalContainedIn and entPhysicalParentRelPos) to help an NMS relate the particular entry to other entries in this table.'
          item_prototypes:
            -
              uuid: eeacf6e74fad4781814d4529fe546dbc
              name: 'entPhysicalAlias for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.14.{#SNMPINDEX}'
              key: 'entPhysicalAlias[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'This object is an ''alias'' name for the physical entity, as specified by a network manager, and provides a non-volatile ''handle'' for the physical entity. On the first instantiation of a physical entity, the value of entPhysicalAlias associated with that entity is set to the zero-length string. However, the agent may set the value to a locally unique default value, instead of a zero-length string. If write access is implemented for an instance of entPhysicalAlias, and a value is written into the instance, the agent must retain the supplied value in the entPhysicalAlias instance (associated with the same physical entity) for as long as that entity remains instantiated. This includes instantiations across all re-initializations/reboots of the network management system, including those resulting in a change of the physical entity''s entPhysicalIndex value.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 6d6db3f40d1a48a28208b10866ae9349
              name: 'entPhysicalAssetID for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.15.{#SNMPINDEX}'
              key: 'entPhysicalAssetID[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'This object is a user-assigned asset tracking identifier (as specified by a network manager) for the physical entity, and provides non-volatile storage of this information. On the first instantiation of a physical entity, the value of entPhysicalAssetID associated with that entity is set to the zero-length string. Not every physical component will have an asset tracking identifier, or even need one. Physical entities for which the associated value of the entPhysicalIsFRU object is equal to ''false(2)'' (e.g., the repeater ports within a repeater module), do not need their own unique asset tracking identifier. An agent does not have to provide write access for such entities, and may instead return a zero-length string. If write access is implemented for an instance of entPhysicalAssetID, and a value is written into the instance, the agent must retain the supplied value in the entPhysicalAssetID instance (associated with the same physical entity) for as long as that entity remains instantiated. This includes instantiations across all re-initializations/reboots of the network management system, including those resulting in a change of the physical entity''s entPhysicalIndex value. If no asset tracking information is associated with the physical component, then this object will contain a zero-length string.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: b2e6ad7537a241349ad3bb367b489cb1
              name: 'entPhysicalClass for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.5.{#SNMPINDEX}'
              key: 'entPhysicalClass[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              value_type: FLOAT
              description: 'An indication of the general hardware type of the physical entity. An agent should set this object to the standard enumeration value that most accurately indicates the general class of the physical entity, or the primary class if there is more than one entity. If no appropriate standard registration identifier exists for this physical entity, then the value ''other(1)'' is returned. If the value is unknown by this agent, then the value ''unknown(2)'' is returned.'
              valuemap:
                name: 'ENTITY-MIB::entPhysicalClass'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: ea0b2d4c5e7b4fa198882f2d8ad1ab91
              name: 'entPhysicalContainedIn for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.4.{#SNMPINDEX}'
              key: 'entPhysicalContainedIn[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              value_type: FLOAT
              description: 'The value of entPhysicalIndex for the physical entity which ''contains'' this physical entity. A value of zero indicates this physical entity is not contained in any other physical entity. Note that the set of ''containment'' relationships define a strict hierarchy; that is, recursion is not allowed. In the event that a physical entity is contained by more than one physical entity (e.g., double-wide modules), this object should identify the containing entity with the lowest value of entPhysicalIndex.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: ed6cf3a42efc40dfa1248a635692c64e
              name: 'entPhysicalDescr for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.2.{#SNMPINDEX}'
              key: 'entPhysicalDescr[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'A textual description of physical entity. This object should contain a string that identifies the manufacturer''s name for the physical entity, and should be set to a distinct value for each version or model of the physical entity.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: fa322a3bd02c475192f0a8a8519861d8
              name: 'entPhysicalFirmwareRev for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.9.{#SNMPINDEX}'
              key: 'entPhysicalFirmwareRev[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The vendor-specific firmware revision string for the physical entity. Note that if revision information is stored internally in a non-printable (e.g., binary) format, then the agent must convert such information to a printable format, in an implementation-specific manner. If no specific firmware programs are associated with the physical component, or if this information is unknown to the agent, then this object will contain a zero-length string.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 16e454f3e94347cd876fe06a9a726070
              name: 'entPhysicalHardwareRev for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.8.{#SNMPINDEX}'
              key: 'entPhysicalHardwareRev[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The vendor-specific hardware revision string for the physical entity. The preferred value is the hardware revision identifier actually printed on the component itself (if present). Note that if revision information is stored internally in a non-printable (e.g., binary) format, then the agent must convert such information to a printable format, in an implementation-specific manner. If no specific hardware revision string is associated with the physical component, or if this information is unknown to the agent, then this object will contain a zero-length string.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 59225915bb69407e8800e5fe67b183af
              name: 'entPhysicalIsFRU for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.16.{#SNMPINDEX}'
              key: 'entPhysicalIsFRU[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              value_type: FLOAT
              description: 'This object indicates whether or not this physical entity is considered a ''field replaceable unit'' by the vendor. If this object contains the value ''true(1)'' then this entPhysicalEntry identifies a field replaceable unit. For all entPhysicalEntries that represent components permanently contained within a field replaceable unit, the value ''false(2)'' should be returned for this object.'
              valuemap:
                name: 'ENTITY-MIB::entPhysicalIsFRU'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 798f14186dc1426fb6a676c6904e5ed3
              name: 'entPhysicalMfgDate for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.17.{#SNMPINDEX}'
              key: 'entPhysicalMfgDate[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'This object contains the date of manufacturing of the managed entity. If the manufacturing date is unknown or not supported, the object is not instantiated. The special value ''0000000000000000''H may also be returned in this case.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 9611bb341a114717b915dec3726b2d6e
              name: 'entPhysicalMfgName for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.12.{#SNMPINDEX}'
              key: 'entPhysicalMfgName[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The name of the manufacturer of this physical component. The preferred value is the manufacturer name string actually printed on the component itself (if present). Note that comparisons between instances of the entPhysicalModelName, entPhysicalFirmwareRev, entPhysicalSoftwareRev, and the entPhysicalSerialNum objects, are only meaningful amongst entPhysicalEntries with the same value of entPhysicalMfgName. If the manufacturer name string associated with the physical component is unknown to the agent, then this object will contain a zero-length string.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 10d942031cc746979cf11b03ae7f0949
              name: 'entPhysicalModelName for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.13.{#SNMPINDEX}'
              key: 'entPhysicalModelName[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The vendor-specific model name identifier string associated with this physical component. The preferred value is the customer-visible part number, which may be printed on the component itself. If the model name string associated with the physical component is unknown to the agent, then this object will contain a zero-length string.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: d70a999e021d45509b76b57fe33bdc24
              name: 'entPhysicalName for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.7.{#SNMPINDEX}'
              key: 'entPhysicalName[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The textual name of the physical entity. The value of this object should be the name of the component as assigned by the local device and should be suitable for use in commands entered at the device''s `console''. This might be a text name (e.g., `console'') or a simple component number (e.g., port or module number, such as `1''), depending on the physical component naming syntax of the device. If there is no local name, or if this object is otherwise not applicable, then this object contains a zero-length string. Note that the value of entPhysicalName for two physical entities will be the same in the event that the console interface does not distinguish between them, e.g., slot-1 and the card in slot-1.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 00ec71db8a564dd88b05f5d621feceba
              name: 'entPhysicalParentRelPos for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.6.{#SNMPINDEX}'
              key: 'entPhysicalParentRelPos[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              value_type: FLOAT
              description: 'An indication of the relative position of this ''child'' component among all its ''sibling'' components. Sibling components are defined as entPhysicalEntries that share the same instance values of each of the entPhysicalContainedIn and entPhysicalClass objects. An NMS can use this object to identify the relative ordering for all sibling components of a particular parent (identified by the entPhysicalContainedIn instance in each sibling entry). If possible, this value should match any external labeling of the physical component. For example, for a container (e.g., card slot) labeled as ''slot #3'', entPhysicalParentRelPos should have the value ''3''. Note that the entPhysicalEntry for the module plugged in slot 3 should have an entPhysicalParentRelPos value of ''1''. If the physical position of this component does not match any external numbering or clearly visible ordering, then user documentation or other external reference material should be used to determine the parent-relative position. If this is not possible, then the agent should assign a consistent (but possibly arbitrary) ordering to a given set of ''sibling'' components, perhaps based on internal representation of the components. If the agent cannot determine the parent-relative position for some reason, or if the associated value of entPhysicalContainedIn is ''0'', then the value ''-1'' is returned. Otherwise, a non-negative integer is returned, indicating the parent-relative position of this physical entity. Parent-relative ordering normally starts from ''1'' and continues to ''N'', where ''N'' represents the highest positioned child entity. However, if the physical entities (e.g., slots) are labeled from a starting position of zero, then the first sibling should be associated with an entPhysicalParentRelPos value of ''0''. Note that this ordering may be sparse or dense, depending on agent implementation. The actual values returned are not globally meaningful, as each ''parent'' component may use different numbering algorithms. The ordering is only meaningful among siblings of the same parent component. The agent should retain parent-relative position values across reboots, either through algorithmic assignment or use of non-volatile storage.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: bf33643f933d40d1a8883188dd1bbc63
              name: 'entPhysicalSerialNum for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.11.{#SNMPINDEX}'
              key: 'entPhysicalSerialNum[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The vendor-specific serial number string for the physical entity. The preferred value is the serial number string actually printed on the component itself (if present). On the first instantiation of an physical entity, the value of entPhysicalSerialNum associated with that entity is set to the correct vendor-assigned serial number, if this information is available to the agent. If a serial number is unknown or non-existent, the entPhysicalSerialNum will be set to a zero-length string instead. Note that implementations that can correctly identify the serial numbers of all installed physical entities do not need to provide write access to the entPhysicalSerialNum object. Agents which cannot provide non-volatile storage for the entPhysicalSerialNum strings are not required to implement write access for this object. Not every physical component will have a serial number, or even need one. Physical entities for which the associated value of the entPhysicalIsFRU object is equal to ''false(2)'' (e.g., the repeater ports within a repeater module), do not need their own unique serial number. An agent does not have to provide write access for such entities, and may return a zero-length string. If write access is implemented for an instance of entPhysicalSerialNum, and a value is written into the instance, the agent must retain the supplied value in the entPhysicalSerialNum instance (associated with the same physical entity) for as long as that entity remains instantiated. This includes instantiations across all re-initializations/reboots of the network management system, including those resulting in a change of the physical entity''s entPhysicalIndex value.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 7ff8f8b33e87498c8d5d7b28435b1be4
              name: 'entPhysicalSoftwareRev for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.10.{#SNMPINDEX}'
              key: 'entPhysicalSoftwareRev[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'The vendor-specific software revision string for the physical entity. Note that if revision information is stored internally in a non-printable (e.g., binary) format, then the agent must convert such information to a printable format, in an implementation-specific manner. If no specific software programs are associated with the physical component, or if this information is unknown to the agent, then this object will contain a zero-length string.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 34e9f8e129a441b38fb5ea49929dba0a
              name: 'entPhysicalUris for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.18.{#SNMPINDEX}'
              key: 'entPhysicalUris[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'This object contains additional identification information about the physical entity. The object contains URIs and, therefore, the syntax of this object must conform to RFC 3986, section 2. Multiple URIs may be present and are separated by white space characters. Leading and trailing white space characters are ignored. If no additional identification information is known about the physical entity or supported, the object is not instantiated. A zero length octet string may also be returned in this case.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
            -
              uuid: 8041450b65b34cb08c8f8c51b440c8bc
              name: 'entPhysicalVendorType for {#SNMPVALUE}'
              type: SNMP_AGENT
              snmp_oid: '.1.3.6.1.2.1.47.1.1.1.1.3.{#SNMPINDEX}'
              key: 'entPhysicalVendorType[{#SNMPVALUE}]'
              delay: 1d
              history: 30d
              trends: '0'
              value_type: TEXT
              description: 'An indication of the vendor-specific hardware type of the physical entity. Note that this is different from the definition of MIB-II''s sysObjectID. An agent should set this object to an enterprise-specific registration identifier value indicating the specific equipment type in detail. The associated instance of entPhysicalClass is used to indicate the general type of hardware device. If no vendor-specific registration identifier exists for this physical entity, or the value is unknown by this agent, then the value { 0 0 } is returned.'
              tags:
                -
                  tag: Application
                  value: 'ENTITY-MIB::entityPhysical'
      macros:
        -
          macro: '{$MIB2ZABBIX_CMD}'
          value: 'mib2zabbix -o .1.3.6.1.2.1.47 --name=Template Module SNMP ENTITY-MIB - entityMIB -e --group=Templates/Modules/Public --history=30 --disc-delay=86400 --check-delay=86400'
        -
          macro: '{$OID}'
          value: .1.3.6.1.2.1.47
        -
          macro: '{$OID_MOD}'
          value: ENTITY-MIB
        -
          macro: '{$OID_PATH}'
          value: iso.org.dod.internet.mgmt.mib-2.entityMIB
        -
          macro: '{$SNMP_COMMUNITY}'
          value: public
        -
          macro: '{$SNMP_PORT}'
          value: '161'
      valuemaps:
        -
          uuid: 676e7b3d42b44ced97e872a2b7d2a767
          name: 'ENTITY-MIB::entPhysicalClass'
          mappings:
            -
              value: '4'
              newvalue: backplane
            -
              value: '11'
              newvalue: stack
            -
              value: '2'
              newvalue: unknown
            -
              value: '6'
              newvalue: powerSupply
            -
              value: '8'
              newvalue: sensor
            -
              value: '7'
              newvalue: fan
            -
              value: '10'
              newvalue: port
            -
              value: '1'
              newvalue: other
            -
              value: '9'
              newvalue: module
            -
              value: '3'
              newvalue: chassis
            -
              value: '5'
              newvalue: container
            -
              value: '12'
              newvalue: cpu
        -
          uuid: eeaa430b7470449ea5c6c3da80295322
          name: 'ENTITY-MIB::entPhysicalIsFRU'
          mappings:
            -
              value: '2'
              newvalue: 'false'
            -
              value: '1'
              newvalue: 'true'
